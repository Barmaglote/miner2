<Window x:Class="EDU.Miner.Core.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EDU.Miner.Core" 
        xmlns:vm="clr-namespace:EDU.Miner.Core.ViewModel" 
        xmlns:converters="clr-namespace:EDU.Miner.Core.Converters"        
        xmlns:game="clr-namespace:EDU.Miner.Core.ViewModel"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        Title="{Binding Title}" Height="650" Width="850" ResizeMode="NoResize">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo/>
    </Window.TaskbarItemInfo>

    <Window.DataContext>
        <vm:GameViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <!--<game:GameViewModel x:Key="gameViewModel" x:Name="GameViewModelResource"></game:GameViewModel>-->
        <Image x:Key="BombImage" Source="/Resources/images/bomb.png"/>
        <Image x:Key="SmileImage" Source="/Resources/images/smile.ico"/>

        <converters:BoolInverter x:Key="CustomBoolInverter" />
        <!-- Base Cell Style -->
        <Style TargetType="Button" x:Key="StandardCell">
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Margin" Value="3"/>

            <Style.Triggers>
                <DataTrigger Binding="{Binding IsOpened}" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Silver"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMinedAndOpened}" Value="True">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Image Source="/Resources/images/bomb.png" Stretch="Fill"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMarked}" Value="True">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Image Source="/Resources/images/flag.png" Stretch="Fill"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsHidden}" Value="True">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="BorderBrush" Value="Silver"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid x:Name="MainContainer">
        <Grid.Background>
            <ImageBrush TileMode="Tile" Stretch="Uniform"/>
        </Grid.Background>
        <ItemsControl ItemsSource="{Binding Cells}" Margin="30,80,200,30" x:Name="PlayGrid" IsEnabled="{Binding IsActive}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding BombsArround}" x:Name="button" FontSize="15" Style="{DynamicResource StandardCell}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonUp" >
                                <i:InvokeCommandAction Command="{Binding CellLeftMouseUpCommand}" CommandParameter="{Binding Cell}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseLeftButtonDown" >
                                <i:InvokeCommandAction Command="{Binding CellLeftMouseDownCommand}" CommandParameter="{Binding Cell}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseRightButtonUp" >
                                <i:InvokeCommandAction Command="{Binding CellRightMouseUpCommand}" CommandParameter="{Binding Cell}"/>
                            </i:EventTrigger>
                            <i:EventTrigger EventName="PreviewMouseRightButtonDown" >
                                <i:InvokeCommandAction Command="{Binding CellRightMouseDownCommand}" CommandParameter="{Binding Cell}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </Button>
                    <DataTemplate.Triggers>
                        <DataTrigger Value="0" Binding="{Binding}">
                            <DataTrigger.Setters>
                                <Setter TargetName="button" Property="Visibility" Value="Hidden"/>
                            </DataTrigger.Setters>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <UniformGrid Columns="10"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
        <Grid Height="53" Margin="30,22,30,0" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions/>
            <Button Grid.Column="1" Width="40" Height="40" x:Name="StartNewGameButton" Background="Silver" Content="{StaticResource SmileImage}" Command="{Binding Path=StartGameCommand}">
            </Button>
            <TextBlock Grid.Column="0" Width="140" Height="40" x:Name="MinesMarkedTextBox" FontSize="28" FontWeight="Bold" Foreground="White" Text="{Binding Game.Field.BombsIsLeft}" TextAlignment="Center" VerticalAlignment="Center" Background="#FFFDD080" Padding="1" AutomationProperties.HelpText="Количество ненайденных бомб">
            </TextBlock>
            <TextBlock Grid.Column="2" Width="140" Height="40" x:Name="TimeLeftTextBox" FontSize="28" FontWeight="Bold" Foreground="White" Text="{Binding TimeIsLeftSeconds}" TextAlignment="Center" VerticalAlignment="Center" Background="#FFFDD080" Padding="1"/>
        </Grid>
        <Grid HorizontalAlignment="Left" Height="495" Margin="650,83,10,0" VerticalAlignment="Top">
            <DataGrid ItemsSource="{Binding HistoricalRecords}" x:Name="RecordsDataGrid" HeadersVisibility="Column" IsReadOnly="True" AutoGenerateColumns="false" ColumnWidth="*" HorizontalAlignment="Left">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Date" Binding="{Binding Time}" Width="80*"></DataGridTextColumn>
                    <DataGridTextColumn Header="Time" Binding="{Binding TotalTimeInSeconds}" Width="20*"></DataGridTextColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
    </Grid>
</Window>
